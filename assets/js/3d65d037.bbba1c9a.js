"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[34609],{65017:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=i(85893),r=i(11151);const s={id:"web-support",title:"React Navigation on the Web",sidebar_label:"Web support"},o=void 0,a={id:"web-support",title:"React Navigation on the Web",description:"React Navigation has built-in support for the Web platform. This allows you to use the same navigation logic in your React Native app as well as on the web. The navigators require using React Native for Web to work on the web.",source:"@site/versioned_docs/version-7.x/web-support.md",sourceDirName:".",slug:"/web-support",permalink:"/docs/7.x/web-support",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/web-support.md",tags:[],version:"7.x",frontMatter:{id:"web-support",title:"React Navigation on the Web",sidebar_label:"Web support"},sidebar:"docs",previous:{title:"Configuring links",permalink:"/docs/7.x/configuring-links"},next:{title:"Server rendering",permalink:"/docs/7.x/server-rendering"}},c={},l=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Web-specific behavior",id:"web-specific-behavior",level:2},{value:"Configuring hosting providers",id:"configuring-hosting-providers",level:2},{value:"Netlify",id:"netlify",level:3},{value:"Vercel",id:"vercel",level:3},{value:"GitHub Pages",id:"github-pages",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["React Navigation has built-in support for the Web platform. This allows you to use the same navigation logic in your React Native app as well as on the web. The navigators require using ",(0,t.jsx)(n.a,{href:"https://github.com/necolas/react-native-web",children:"React Native for Web"})," to work on the web."]}),"\n",(0,t.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsx)(n.p,{children:"While Web support works out of the box, there are some things to configure to ensure a good experience on the web:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/configuring-links",children:(0,t.jsx)(n.strong,{children:"Configure linking"})})}),"\n",(0,t.jsx)(n.p,{children:"Configuring linking allows React Navigation to integrate with the browser's URL bar. This is crucial for web apps to have proper URLs for each screen."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/link",children:(0,t.jsx)(n.strong,{children:"Use Button or Link components"})})}),"\n",(0,t.jsxs)(n.p,{children:["You may be familiar with using ",(0,t.jsx)(n.code,{children:"navigation.navigate"})," to navigate between screens. But it's important to avoid using it when supporting the web. Instead, use the ",(0,t.jsx)(n.code,{children:"Link"})," or ",(0,t.jsx)(n.a,{href:"/docs/7.x/elements#button",children:(0,t.jsx)(n.code,{children:"Button"})})," components to navigate between screens. This ensures that an anchor tag is rendered which provides the expected behavior on the web."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/server-rendering",children:(0,t.jsx)(n.strong,{children:"Server rendering"})})}),"\n",(0,t.jsx)(n.p,{children:"Currently, React Navigation works best with fully client-side rendered apps. However, minimal server-side rendering support is available. So you can optionally choose to server render your app."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In React Navigation 4, it was necessary to install a separate package called ",(0,t.jsx)(n.code,{children:"@react-navigation/web"})," to use web integration. This package is no longer needed in recent versions of React Navigation. If you have it installed, make sure to uninstall it to avoid conflicts."]})}),"\n",(0,t.jsx)(n.h2,{id:"web-specific-behavior",children:"Web-specific behavior"}),"\n",(0,t.jsx)(n.p,{children:"Some of the navigators have different behavior on the web compared to native platforms:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/stack-navigator",children:(0,t.jsx)(n.strong,{children:"Native Stack Navigator"})})}),"\n",(0,t.jsx)(n.p,{children:"Native Stack Navigator uses the platform's primitives to handle animations and gestures on native platforms. However, animations and gestures are not supported on the web."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/stack-navigator",children:(0,t.jsx)(n.strong,{children:"Stack Navigator"})})}),"\n",(0,t.jsxs)(n.p,{children:["Stack Navigator uses ",(0,t.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-gesture-handler/",children:(0,t.jsx)(n.code,{children:"react-native-gesture-handler"})})," to handle swipe gestures on native platforms. However, gestures are not supported on the web."]}),"\n",(0,t.jsxs)(n.p,{children:["In addition, screen transitions are disabled by default on the web. You can enable them by setting ",(0,t.jsx)(n.code,{children:"animationEnabled: true"})," in the navigator's options."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/7.x/drawer-navigator",children:(0,t.jsx)(n.strong,{children:"Drawer Navigator"})})}),"\n",(0,t.jsxs)(n.p,{children:["Drawer Navigator uses ",(0,t.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-gesture-handler/",children:(0,t.jsx)(n.code,{children:"react-native-gesture-handler"})})," to handle swipe gestures and ",(0,t.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/",children:(0,t.jsx)(n.code,{children:"react-native-reanimated"})})," for animations on native platforms. However, gestures are not supported on the web, and animations are handled using CSS transitions."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In addition, navigators render hyperlinks on the web when possible, such as in the drawer sidebar, tab bar, stack navigator's back button, etc."}),"\n",(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"react-native-gesture-handler"})," and ",(0,t.jsx)(n.code,{children:"react-native-reanimated"})," are not used on the web, avoid importing them in your own code to reduce the bundle size unless you need them for your components. You can use ",(0,t.jsx)(n.code,{children:".native.js"})," or ",(0,t.jsx)(n.code,{children:".native.ts"})," extensions for code specific to native platforms."]}),"\n",(0,t.jsx)(n.h2,{id:"configuring-hosting-providers",children:"Configuring hosting providers"}),"\n",(0,t.jsxs)(n.p,{children:["React Navigation is designed for Single Page Applications (SPAs). This usually means that the ",(0,t.jsx)(n.code,{children:"index.html"})," file needs to be served for all routes."]}),"\n",(0,t.jsxs)(n.p,{children:["During development, the bundler such as Webpack or Metro automatically handles this. However, when deploying the site, you may need to configure redirects to ensure that the ",(0,t.jsx)(n.code,{children:"index.html"})," file is served for all routes to avoid 404 errors."]}),"\n",(0,t.jsx)(n.p,{children:"Here are instructions for some of the popular hosting providers:"}),"\n",(0,t.jsx)(n.h3,{id:"netlify",children:"Netlify"}),"\n",(0,t.jsxs)(n.p,{children:["To handle redirects on Netlify, add the following in the ",(0,t.jsx)(n.code,{children:"netlify.toml"})," file at the root of your project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[[redirects]]\n  from = "/*"\n  to = "/index.html"\n  status = 200\n'})}),"\n",(0,t.jsx)(n.h3,{id:"vercel",children:"Vercel"}),"\n",(0,t.jsxs)(n.p,{children:["To handle redirects on Vercel, add the following in the ",(0,t.jsx)(n.code,{children:"vercel.json"})," file at the root of your project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rewrites": [\n    { "source": "/(.*)", "destination": "/index.html" }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"github-pages",children:"GitHub Pages"}),"\n",(0,t.jsx)(n.p,{children:"GitHub pages doesn't support such redirection configuration for SPAs. There are a couple of ways to work around this:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Rename your ",(0,t.jsx)(n.code,{children:"index.html"})," to ",(0,t.jsx)(n.code,{children:"404.html"}),". This will serve the ",(0,t.jsx)(n.code,{children:"404.html"})," file for all routes. However, this will cause a 404 status code to be returned for all routes. So it's not ideal for SEO."]}),"\n",(0,t.jsxs)(n.li,{children:["Write a script that generates copies the ",(0,t.jsx)(n.code,{children:"index.html"})," file to all routes in the build output. For example, if your app has routes ",(0,t.jsx)(n.code,{children:"/"}),", ",(0,t.jsx)(n.code,{children:"/about"}),", and ",(0,t.jsx)(n.code,{children:"/contact"}),", you can copy the ",(0,t.jsx)(n.code,{children:"index.html"})," file to ",(0,t.jsx)(n.code,{children:"about.html"})," and ",(0,t.jsx)(n.code,{children:"contact.html"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>o});var t=i(67294);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);